1) run-
npm install @mui/material @emotion/react @emotion/styled

2) Import ThemeProvider and Your Theme:
In your React code, import ThemeProvider from MUI and your general design theme created using createTheme. For example:
-------------------------------------------
jsx
Copy code
import React from 'react';
import { ThemeProvider } from '@mui/material/styles';
import theme from './theme/theme'; // Path to your general design theme file

function App() {
  return (
    <ThemeProvider theme={theme}>
      {/* Add your site content here */}
    </ThemeProvider>
  );
}

export default App;
------------------------------------------------

3) Use the Design in Components:
Now, within the ThemeProvider scope, you can utilize your general design across components using MUI props that are universally accepted. For example:
-----------------------------------
jsx
Copy code
import React from 'react';
import { Button, TextField, Typography } from '@mui/material';

function HomePage() {
  return (
    <div>
      <Typography variant="h1">Welcome to Our Website</Typography>
      <Button variant="contained" color="primary">
        Click Here
      </Button>
      <TextField label="Username" variant="outlined" />
    </div>
  );
}

export default HomePage;
----------------------------------
Here, Typography, Button, and TextField components are using the general design styles defined in your theme without needing to pass the theme file to each component separately.
 
4) Adding general design settings to the site -
Additional settings can be added to the theme.js file

5) דריסת עיצוב של רכיבי MUI
אם ברצונך להגדיר התאמות עיצוב ספציפיות רק לרכיב MUI בקומפוננטה שלך, תוכל לעשות זאת על ידי שימוש ב-overrides בתוך הקומפוננטה שלך באמצעות סגנונות דינמיים או באמצעות ה-withStyles של MUI.

שימוש ב-withStyles:
withStyles מאפשר להגדיר סגנון אישי לרכיב MUI בתוך הקומפוננטה שלך, מבלי לשנות את הגדרות העיצוב הכלליות ב-theme.

לדוגמה, נניח שיש לנו קומפוננטה שבה יש לשנות את הגדרות העיצוב של כפתור:
--------------------------------------------------------------------
jsx
Copy code
import React from 'react';
import Button from '@mui/material/Button';
import { withStyles } from '@mui/styles';

const styles = {
  root: {
    backgroundColor: 'orange', // שינוי צבע רקע לכפתורים לצבע כתום
    color: 'white', // שינוי צבע טקסט ללבן
    '&:hover': {
      backgroundColor: 'darkorange', // שינוי צבע רקע לכפתור בעת העכברה
    },
  },
};

function CustomButton(props) {
  const { classes, ...other } = props;

  return (
    <Button classes={{ root: classes.root }} {...other}>
      {props.children}
    </Button>
  );
}

export default withStyles(styles)(CustomButton);
-----------------------------------------------------------
